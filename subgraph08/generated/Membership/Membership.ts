// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MemberRegistered extends ethereum.Event {
  get params(): MemberRegistered__Params {
    return new MemberRegistered__Params(this);
  }
}

export class MemberRegistered__Params {
  _event: MemberRegistered;

  constructor(event: MemberRegistered) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get username(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class MemberRegisteredWithoutName extends ethereum.Event {
  get params(): MemberRegisteredWithoutName__Params {
    return new MemberRegisteredWithoutName__Params(this);
  }
}

export class MemberRegisteredWithoutName__Params {
  _event: MemberRegisteredWithoutName;

  constructor(event: MemberRegisteredWithoutName) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ProblemAndSolutionAccepted extends ethereum.Event {
  get params(): ProblemAndSolutionAccepted__Params {
    return new ProblemAndSolutionAccepted__Params(this);
  }
}

export class ProblemAndSolutionAccepted__Params {
  _event: ProblemAndSolutionAccepted;

  constructor(event: ProblemAndSolutionAccepted) {
    this._event = event;
  }

  get problemCreator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get problemAcceptedCount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get solutionCreator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get solutionAcceptedCount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProjectManaged extends ethereum.Event {
  get params(): ProjectManaged__Params {
    return new ProjectManaged__Params(this);
  }
}

export class ProjectManaged__Params {
  _event: ProjectManaged;

  constructor(event: ProjectManaged) {
    this._event = event;
  }

  get _member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ProjectManagedCount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TaskAssignedtoMember extends ethereum.Event {
  get params(): TaskAssignedtoMember__Params {
    return new TaskAssignedtoMember__Params(this);
  }
}

export class TaskAssignedtoMember__Params {
  _event: TaskAssignedtoMember;

  constructor(event: TaskAssignedtoMember) {
    this._event = event;
  }

  get memberAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskCount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UsernameChanged extends ethereum.Event {
  get params(): UsernameChanged__Params {
    return new UsernameChanged__Params(this);
  }
}

export class UsernameChanged__Params {
  _event: UsernameChanged;

  constructor(event: UsernameChanged) {
    this._event = event;
  }

  get _member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _username(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Membership__viewMemberDetailsResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: string,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }
}

export class Membership extends ethereum.SmartContract {
  static bind(address: Address): Membership {
    return new Membership("Membership", address);
  }

  isRegisteredMember(_address: Address): boolean {
    let result = super.call(
      "isRegisteredMember",
      "isRegisteredMember(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBoolean();
  }

  try_isRegisteredMember(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRegisteredMember",
      "isRegisteredMember(address):(bool)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isUsernameTaken(_username: string): boolean {
    let result = super.call(
      "isUsernameTaken",
      "isUsernameTaken(string):(bool)",
      [ethereum.Value.fromString(_username)]
    );

    return result[0].toBoolean();
  }

  try_isUsernameTaken(_username: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isUsernameTaken",
      "isUsernameTaken(string):(bool)",
      [ethereum.Value.fromString(_username)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  viewMemberDetails(_address: Address): Membership__viewMemberDetailsResult {
    let result = super.call(
      "viewMemberDetails",
      "viewMemberDetails(address):(string,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_address)]
    );

    return new Membership__viewMemberDetailsResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_viewMemberDetails(
    _address: Address
  ): ethereum.CallResult<Membership__viewMemberDetailsResult> {
    let result = super.tryCall(
      "viewMemberDetails",
      "viewMemberDetails(address):(string,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Membership__viewMemberDetailsResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _authorizationManagementContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AssignTaskToMemberCall extends ethereum.Call {
  get inputs(): AssignTaskToMemberCall__Inputs {
    return new AssignTaskToMemberCall__Inputs(this);
  }

  get outputs(): AssignTaskToMemberCall__Outputs {
    return new AssignTaskToMemberCall__Outputs(this);
  }
}

export class AssignTaskToMemberCall__Inputs {
  _call: AssignTaskToMemberCall;

  constructor(call: AssignTaskToMemberCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AssignTaskToMemberCall__Outputs {
  _call: AssignTaskToMemberCall;

  constructor(call: AssignTaskToMemberCall) {
    this._call = call;
  }
}

export class ChangeNameCall extends ethereum.Call {
  get inputs(): ChangeNameCall__Inputs {
    return new ChangeNameCall__Inputs(this);
  }

  get outputs(): ChangeNameCall__Outputs {
    return new ChangeNameCall__Outputs(this);
  }
}

export class ChangeNameCall__Inputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }

  get _username(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ChangeNameCall__Outputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }
}

export class ManagedProjectCall extends ethereum.Call {
  get inputs(): ManagedProjectCall__Inputs {
    return new ManagedProjectCall__Inputs(this);
  }

  get outputs(): ManagedProjectCall__Outputs {
    return new ManagedProjectCall__Outputs(this);
  }
}

export class ManagedProjectCall__Inputs {
  _call: ManagedProjectCall;

  constructor(call: ManagedProjectCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ManagedProjectCall__Outputs {
  _call: ManagedProjectCall;

  constructor(call: ManagedProjectCall) {
    this._call = call;
  }
}

export class ProposedProblemAndSolutionAcceptedCall extends ethereum.Call {
  get inputs(): ProposedProblemAndSolutionAcceptedCall__Inputs {
    return new ProposedProblemAndSolutionAcceptedCall__Inputs(this);
  }

  get outputs(): ProposedProblemAndSolutionAcceptedCall__Outputs {
    return new ProposedProblemAndSolutionAcceptedCall__Outputs(this);
  }
}

export class ProposedProblemAndSolutionAcceptedCall__Inputs {
  _call: ProposedProblemAndSolutionAcceptedCall;

  constructor(call: ProposedProblemAndSolutionAcceptedCall) {
    this._call = call;
  }

  get _problemCreator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _solutionCreator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ProposedProblemAndSolutionAcceptedCall__Outputs {
  _call: ProposedProblemAndSolutionAcceptedCall;

  constructor(call: ProposedProblemAndSolutionAcceptedCall) {
    this._call = call;
  }
}

export class RegisterMemberCall extends ethereum.Call {
  get inputs(): RegisterMemberCall__Inputs {
    return new RegisterMemberCall__Inputs(this);
  }

  get outputs(): RegisterMemberCall__Outputs {
    return new RegisterMemberCall__Outputs(this);
  }
}

export class RegisterMemberCall__Inputs {
  _call: RegisterMemberCall;

  constructor(call: RegisterMemberCall) {
    this._call = call;
  }

  get _username(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterMemberCall__Outputs {
  _call: RegisterMemberCall;

  constructor(call: RegisterMemberCall) {
    this._call = call;
  }
}

export class UpdateTasksAvgCall extends ethereum.Call {
  get inputs(): UpdateTasksAvgCall__Inputs {
    return new UpdateTasksAvgCall__Inputs(this);
  }

  get outputs(): UpdateTasksAvgCall__Outputs {
    return new UpdateTasksAvgCall__Outputs(this);
  }
}

export class UpdateTasksAvgCall__Inputs {
  _call: UpdateTasksAvgCall;

  constructor(call: UpdateTasksAvgCall) {
    this._call = call;
  }

  get performer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _taskId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _taskAvg(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateTasksAvgCall__Outputs {
  _call: UpdateTasksAvgCall;

  constructor(call: UpdateTasksAvgCall) {
    this._call = call;
  }
}
