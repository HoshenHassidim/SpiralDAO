// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SolutionCancelled extends ethereum.Event {
  get params(): SolutionCancelled__Params {
    return new SolutionCancelled__Params(this);
  }
}

export class SolutionCancelled__Params {
  _event: SolutionCancelled;

  constructor(event: SolutionCancelled) {
    this._event = event;
  }

  get solutionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SolutionNameChanged extends ethereum.Event {
  get params(): SolutionNameChanged__Params {
    return new SolutionNameChanged__Params(this);
  }
}

export class SolutionNameChanged__Params {
  _event: SolutionNameChanged;

  constructor(event: SolutionNameChanged) {
    this._event = event;
  }

  get solutionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newName(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class SolutionProjectCriteriaMet extends ethereum.Event {
  get params(): SolutionProjectCriteriaMet__Params {
    return new SolutionProjectCriteriaMet__Params(this);
  }
}

export class SolutionProjectCriteriaMet__Params {
  _event: SolutionProjectCriteriaMet;

  constructor(event: SolutionProjectCriteriaMet) {
    this._event = event;
  }

  get solutionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SolutionProposed extends ethereum.Event {
  get params(): SolutionProposed__Params {
    return new SolutionProposed__Params(this);
  }
}

export class SolutionProposed__Params {
  _event: SolutionProposed;

  constructor(event: SolutionProposed) {
    this._event = event;
  }

  get solutionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get problemId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class SolutionRated extends ethereum.Event {
  get params(): SolutionRated__Params {
    return new SolutionRated__Params(this);
  }
}

export class SolutionRated__Params {
  _event: SolutionRated;

  constructor(event: SolutionRated) {
    this._event = event;
  }

  get solutionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get rater(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rating(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Solutions__getCreatorsResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getProblemCreator(): Address {
    return this.value0;
  }

  getSolutionCreator(): Address {
    return this.value1;
  }
}

export class Solutions__viewSolutionDetailsResult {
  value0: BigInt;
  value1: BigInt;
  value2: Address;
  value3: string;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: Address,
    value3: string,
    value4: BigInt,
    value5: BigInt,
    value6: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): Address {
    return this.value2;
  }

  getValue3(): string {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): boolean {
    return this.value6;
  }
}

export class Solutions extends ethereum.SmartContract {
  static bind(address: Address): Solutions {
    return new Solutions("Solutions", address);
  }

  canBecomeProject(_solutionId: BigInt): boolean {
    let result = super.call(
      "canBecomeProject",
      "canBecomeProject(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );

    return result[0].toBoolean();
  }

  try_canBecomeProject(_solutionId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canBecomeProject",
      "canBecomeProject(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  canBecomeProjectView(_solutionId: BigInt): boolean {
    let result = super.call(
      "canBecomeProjectView",
      "canBecomeProjectView(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );

    return result[0].toBoolean();
  }

  try_canBecomeProjectView(_solutionId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "canBecomeProjectView",
      "canBecomeProjectView(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCreators(_solutionId: BigInt): Solutions__getCreatorsResult {
    let result = super.call(
      "getCreators",
      "getCreators(uint256):(address,address)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );

    return new Solutions__getCreatorsResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_getCreators(
    _solutionId: BigInt
  ): ethereum.CallResult<Solutions__getCreatorsResult> {
    let result = super.tryCall(
      "getCreators",
      "getCreators(uint256):(address,address)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Solutions__getCreatorsResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }

  getSolutionCounter(): BigInt {
    let result = super.call(
      "getSolutionCounter",
      "getSolutionCounter():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getSolutionCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSolutionCounter",
      "getSolutionCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isSolutionNameTaken(_name: string): boolean {
    let result = super.call(
      "isSolutionNameTaken",
      "isSolutionNameTaken(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );

    return result[0].toBoolean();
  }

  try_isSolutionNameTaken(_name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isSolutionNameTaken",
      "isSolutionNameTaken(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  viewSolutionDetails(
    _solutionId: BigInt
  ): Solutions__viewSolutionDetailsResult {
    let result = super.call(
      "viewSolutionDetails",
      "viewSolutionDetails(uint256):(uint256,uint256,address,string,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );

    return new Solutions__viewSolutionDetailsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean()
    );
  }

  try_viewSolutionDetails(
    _solutionId: BigInt
  ): ethereum.CallResult<Solutions__viewSolutionDetailsResult> {
    let result = super.tryCall(
      "viewSolutionDetails",
      "viewSolutionDetails(uint256):(uint256,uint256,address,string,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(_solutionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Solutions__viewSolutionDetailsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBoolean()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _membershipContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _problemsContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _authorizationManagementContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CanBecomeProjectCall extends ethereum.Call {
  get inputs(): CanBecomeProjectCall__Inputs {
    return new CanBecomeProjectCall__Inputs(this);
  }

  get outputs(): CanBecomeProjectCall__Outputs {
    return new CanBecomeProjectCall__Outputs(this);
  }
}

export class CanBecomeProjectCall__Inputs {
  _call: CanBecomeProjectCall;

  constructor(call: CanBecomeProjectCall) {
    this._call = call;
  }

  get _solutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CanBecomeProjectCall__Outputs {
  _call: CanBecomeProjectCall;

  constructor(call: CanBecomeProjectCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelSolutionCall extends ethereum.Call {
  get inputs(): CancelSolutionCall__Inputs {
    return new CancelSolutionCall__Inputs(this);
  }

  get outputs(): CancelSolutionCall__Outputs {
    return new CancelSolutionCall__Outputs(this);
  }
}

export class CancelSolutionCall__Inputs {
  _call: CancelSolutionCall;

  constructor(call: CancelSolutionCall) {
    this._call = call;
  }

  get _solutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelSolutionCall__Outputs {
  _call: CancelSolutionCall;

  constructor(call: CancelSolutionCall) {
    this._call = call;
  }
}

export class ChangeSolutionNameCall extends ethereum.Call {
  get inputs(): ChangeSolutionNameCall__Inputs {
    return new ChangeSolutionNameCall__Inputs(this);
  }

  get outputs(): ChangeSolutionNameCall__Outputs {
    return new ChangeSolutionNameCall__Outputs(this);
  }
}

export class ChangeSolutionNameCall__Inputs {
  _call: ChangeSolutionNameCall;

  constructor(call: ChangeSolutionNameCall) {
    this._call = call;
  }

  get _solutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeSolutionNameCall__Outputs {
  _call: ChangeSolutionNameCall;

  constructor(call: ChangeSolutionNameCall) {
    this._call = call;
  }
}

export class ProposeSolutionCall extends ethereum.Call {
  get inputs(): ProposeSolutionCall__Inputs {
    return new ProposeSolutionCall__Inputs(this);
  }

  get outputs(): ProposeSolutionCall__Outputs {
    return new ProposeSolutionCall__Outputs(this);
  }
}

export class ProposeSolutionCall__Inputs {
  _call: ProposeSolutionCall;

  constructor(call: ProposeSolutionCall) {
    this._call = call;
  }

  get _problemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ProposeSolutionCall__Outputs {
  _call: ProposeSolutionCall;

  constructor(call: ProposeSolutionCall) {
    this._call = call;
  }
}

export class RateSolutionCall extends ethereum.Call {
  get inputs(): RateSolutionCall__Inputs {
    return new RateSolutionCall__Inputs(this);
  }

  get outputs(): RateSolutionCall__Outputs {
    return new RateSolutionCall__Outputs(this);
  }
}

export class RateSolutionCall__Inputs {
  _call: RateSolutionCall;

  constructor(call: RateSolutionCall) {
    this._call = call;
  }

  get _solutionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _rating(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RateSolutionCall__Outputs {
  _call: RateSolutionCall;

  constructor(call: RateSolutionCall) {
    this._call = call;
  }
}
